version: "3.6"

volumes:
  postgres:
  redis:
  gems:
  # node_modules:

services:
  db:
    image: postgres:12-alpine
    expose:
      - 5432
    environment:
      POSTGRES_USER: bookstore
      POSTGRES_PASSWORD: bookstore_password
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "bookstore"]

  redis:
    image: redis:5-alpine
    volumes:
      - redis:/var/lib/redis/data
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]

  app: &app
    build:
      context: ../
      dockerfile: .dockerdev/Dockerfile
      args:
        BUNDLER_VERSION: 2.0.2
    command: bin/rails server -b 0.0.0.0
    entrypoint: .dockerdev/entrypoint.sh
    ports:
      - 3000:3000
    tty: true
    stdin_open: true
    environment:
      BUNDLE_WITHOUT:
      RAILS_ENV: development
      RAKE_ENV: development
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ../:/home/www/bsdt
      - gems:/usr/local/bundle
      # - node_modules:/home/www/bsdt/node_modules
    tmpfs:
      - /tmp
    depends_on:
      - db
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 2m

  # worker_app:
  #   <<: *app
  #   command: bundle exec sidekiq -C config/sidekiq.yml
  #   entrypoint: ''
  #   ports: []
  #   environment:
  #     REDIS_URL: redis://redis:6379/0
  #   depends_on:
  #     - db
  #     - app
  #     - redis
  #   healthcheck:
  #     test: ["CMD-SHELL", "ps ax | grep -v grep | grep sidekiq || exit 1"]

  # mailcatcher:
  #   image: zolweb/docker-mailcatcher:latest
  #   expose:
  #     - 1025
  #   ports:
  #     - 1080:1080
